from sklearn.model_selection import train_test_split
from keras.models import Sequential
from keras.models import Model
from keras.layers import Input
from keras.layers import Dense
import pandas as pd
from sklearn.preprocessing import LabelEncoder

#import data
dataset = pd.read_csv(r'C:\Users\annaj\Desktop\School Stuff\DeepLearning_Lesson1\Breas Cancer.csv')
#print(dataset)
#transform categorical 'diagnosis' column to numerical data
le = LabelEncoder()
#these are the columns minus 'id' and 'diagnosis'
x = dataset.iloc[:, [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]]
dataset['cat_transformed'] = le.fit_transform(dataset['diagnosis'].astype('str'))
y = dataset['cat_transformed']
X_train, X_test, Y_train, Y_test=train_test_split(x, y, test_size=0.25, random_state=87)

my_first_nn = Sequential() #create model
my_first_nn.add(Dense(20, input_dim=30, activation='relu')) #hidden layer
my_first_nn.add(Dense(1, activation='sigmoid')) #output layer

my_first_nn.compile(loss='binary_crossentropy', optimizer='adam')
my_first_nn_fitted = my_first_nn.fit(X_train, Y_train, epochs=100, verbose=0, initial_epoch=0)
#print summary and accuracy
print(my_first_nn.summary())
print(my_first_nn.evaluate(X_test, Y_test, verbose=0))
